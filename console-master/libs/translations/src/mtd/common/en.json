{
  "common": {
    "add": "Add",
    "cancel": "Cancel",
    "close": "Close",
    "delete": "Delete",
    "description": "Description",
    "edit": "Edit",
    "osAndroid": "Android",
    "osIOS": "iOS",
    "remove": "Remove",
    "save": "Save",
    "view": "View",
    "yes": "Yes",
    "total": "total",
    "noPermissionsToViewData": "No permissions to view data",
    "submit": "Submit",
    "importUploadDescription": "Select a .csv file to upload.",
    "downloadExample": "Download example",
    "upload": "Upload",
    "importUnsupportedFileTypeMsg": "The file type is invalid. Only .csv files are supported.",
    "importInvalidFormat": "The file format is invalid.",
    "importTooLargeFile": "The .csv file is too large for import. Please divide it into several parts.",
    "export": "Export"
  },
  "policy": {
    "list": {
      "title": "Protect Mobile policies",
      "pageDescription": "Add a policy to enable mobile protection and control the threat detections that you want to use.",
      "deleteSuccess": "The policies were deleted.",
      "deleteError": "{{deleteErrorCount}} of {{deleteCount}} policies could not be deleted."
    },
    "name": "Name",
    "description": "Description",
    "generalInformationLabel": "General Information",
    "notificationInformationLabel": "Notifications",
    "dataPrivacyInformationLabel": "Data Privacy",
    "detectionHeader": "Detection",
    "detectionHeaderDeviceTooltip": "A notification will be sent to the userâ€™s device.",
    "detectionHeaderEmailTooltip": "An email notification will be sent to the user.",
    "create": {
      "addButtonLabel": "Add",
      "cancelButtonLabel": "Cancel"
    },
    "update": {
      "tab": {
        "settingsLabel": "Settings",
        "usersAndGroupsLabel": "Assigned users and groups"
      }
    },
    "ios": {
      "tabLabel": "iOS",
      "appSecurityHeader": "App security detections",
      "deviceSecurityHeader": "Device security detections",
      "networkProtectionHeader": "Network protections detections",
      "safeBrowsingProtectionHeader": "Safe browsing detections",
      "miscellaneousHeader": "Miscellaneous"
    },
    "android": {
      "tabLabel": "Android",
      "appSecurityHeader": "App security detections",
      "deviceSecurityHeader": "Device security detections",
      "networkProtectionHeader": "Network protections detections",
      "safeBrowsingProtectionHeader": "Safe browsing detections",
      "miscellaneousHeader": "Miscellaneous"
    },
    "saveButtonLabel": "Save",
    "cancelButtonLabel": "Cancel",
    "saveAsButtonLabel": "Save As",
    "nameHelperText": "A policy with this name already exists.",
    "nameHelperTextRequired": "The name is required.",
    "warningNotificationsEnabled": "Email notifications",
    "warningNotificationsEnabledLabel": "Device user will receive warning messages when a detection is triggered.",
    "warningNotificationsCount": "Warning count",
    "warningNotificationsCountHelperText": "The value must be between 1 and 10 000.",
    "androidScanMsgStartTimeOffset": "Start scanning offset",
    "androidScanMsgStartTimeOffsetHelperText": "The range must be 0 to 168 hours, where 0 means scan future messages.",
    "warningNotificationsInterval": "Warning interval",
    "warningNotificationsIntervalHelperText": "The interval must be between 15 minutes and 365 days.",
    "warningNotificationsIntervalType": {
      "MINUTES": "Minutes",
      "HOURS": "Hours",
      "DAYS": "Days"
    },
    "dataPrivacyEnabled": "Data privacy",
    "dataPrivacyEnabledRequired": "You must select at least one field.",
    "dataPrivacyEnabledLabel": "The selected data fields will be obfuscated.<p><strong>Caution:</strong> When data privacy is enabled, the fields that are selected in the following list will be obfuscated automatically by the BlackBerry Protect Mobile threat processing service before they are stored.</p><p>The fields will be sent from the BlackBerry Protect app to the BlackBerry Protect Mobile threat processing service. Fields that are obfuscated will limit BlackBerry's ability to display the threat information in the dashboard and reports.</p>",
    "dataPrivacyApplicationName": "App name",
    "dataPrivacyUrl": "URL",
    "dataPrivacyApplicationDeveloperSigningId": "App developer signing identity",
    "dataPrivacyApplicationPackageName": "App package name",
    "dataPrivacyNetworkSsid": "Network SSID",
    "dataPrivacyMessageSenderPhoneEmail": "Message sender phone/email",
    "androidPrivilegeEscalationEnabled": "Compromised device",
    "androidPrivilegeEscalationEnabledLabel": "Detect whether a device is rooted.",
    "androidHwAttestationEnabled": "Hardware attestation failure",
    "androidHwAttestationEnabledLabel": "Enable hardware attestation checks.",
    "androidHwAttestationSecurityLevelLabel": "Minimum security level required",
    "androidHwAttestationSecurityLevel": {
      "SOFTWARE": "Software",
      "TRUSTED_ENVIRONMENT": "Trusted environment",
      "STRONGBOX": "Strongbox"
    },
    "androidHwAttestationSecurityPatchEnabled": "Security patch level",
    "androidHwAttestationSecurityPatchVendor": "Vendor",
    "androidHwAttestationSecurityPatchBrand": "Brand",
    "androidHwAttestationSecurityPatchDate": "Security patch date",
    "androidHwAttestationSecurityPatchList": "Select device models",
    "androidHwAttestationSecurityPatchSearch": "Search for models",
    "androidHwAttestationSecurityPatchListLabel": "Select the device models that require a minimum security patch.  At least one model must be selected.",
    "androidHwAttestationSecurityPatchLevelListRequired": "You must select at least one model.",
    "androidSafetynetAttestationEnabled": "SafetyNet attestation failure",
    "androidSafetynetAttestationEnabledLabel": "Enable SafetyNet attestation checks.",
    "androidSafetynetAttestationCtsEnabled": "Enable CTS profile matching",
    "androidMaliciousAppEnabled": "Malicious apps",
    "androidMaliciousAppEnabledLabel": "Detect whether a potentially malicious app package is on an Android device.",
    "androidMaliciousAppAlwaysAllowApprovedList": "Always allow apps in the safe app list",
    "androidMaliciousAppAlwaysBlockRestrictList": "Always block apps in the restricted app list",
    "androidMaliciousAppScanSystem": "Scan system apps",
    "androidMaliciousAppUploadOverWifi": "Upload app packages for safety check over a Wi-Fi connection",
    "androidMaliciousAppWifiMaxSize": "Max. upload over Wi-Fi",
    "androidMaliciousAppWifiMaxSizeHelperText": "Specify, in MB, the maximum upload size for apps over Wi-Fi. \"0\" indicates no limit.",
    "androidMaliciousAppWifiMaxMonthly": "Max. monthly upload over Wi-Fi",
    "androidMaliciousAppWifiMaxMonthlyHelperText": "Specify, in MB, the maximum monthly upload size for apps over Wi-Fi. \"0\" indicates no limit.",
    "androidMaliciousAppUploadOverMobile": "Upload app packages for safety check over a mobile network connection",
    "androidMaliciousAppMobileMaxSize": "Max. upload over mobile",
    "androidMaliciousAppMobileMaxSizeHelperText": "Specify, in MB, the maximum upload size for each app over a mobile network connection. \"0\" indicates no limit.",
    "androidMaliciousAppMobileMaxMonthly": "Max. monthly upload over mobile",
    "androidMaliciousAppMobileMaxMonthlyHelperText": "Specify, in MB, the maximum upload size for each app over a mobile network connection. \"0\" indicates no limit.",
    "androidSideLoadedAppEnabled": "Sideloaded apps",
    "androidSideLoadedAppEnabledLabel": "Detect if an app from a source that was not trusted or is unidentified is on the device.",
    "androidMessageScanningEnabled": "Unsafe message",
    "androidMessageScanningEnabledLabel": "Detect SMS messages that contain potentially malicious URLs.",
    "androidUnresponsiveAgent": "Unresponsive agent",
    "androidUnresponsiveAgentLabel": "Detect if MTD Agent is unresponsive and unable to report threats.",
    "androidUnresponsiveAgentEmailNotify": "An unresponsive agent email notification will be sent to the user.",
    "androidUnresponsiveThresholdHours": "Threshold",
    "androidUnresponsiveThresholdHoursHelperText": "The range must be 4 to 168 hours",
    "iosUnresponsiveAgent": "Unresponsive agent",
    "iosUnresponsiveAgentLabel": "Detect if MTD Agent is unresponsive and unable to report threats.",
    "iosUnresponsiveAgentDeviceNotify": "An unresponsive agent notification will be sent to the user's device.",
    "iosUnresponsiveAgentEmailNotify": "An unresponsive agent email notification will be sent to the user.",
    "iosUnresponsiveThresholdHours": "Threshold",
    "iosUnresponsiveThresholdHoursHelperText": "The range must be 4 to 168 hours",
    "androidMessageScanningOptionLabel": "Scanning option",
    "androidMessageScanningOption": {
      "CLOUD_SCANNING": "Cloud scanning",
      "ON_DEVICE_SCANNING": "On-device scanning",
      "NO_SCANNING": "No scanning"
    },
    "androidCompromisedNetworkEnabled": "Unsafe network connection",
    "androidCompromisedNetworkEnabledLabel": "Detect whether the network connection is safe or unsafe.",
    "androidInsecureWifiEnabled": "Insecure Wi-Fi",
    "androidInsecureWifiEnabledLabel": "Detect whether the device is using insecure Wi-Fi. At least one setting must be selected.",
    "androidInsecureWifiList": "Select insecure Wi-Fi settings",
    "androidInsecureWifiListLeft": "Secure",
    "androidInsecureWifiListRight": "Insecure",
    "androidEncryptionDisabled": "Encryption disabled",
    "androidEncryptionDisabledLabel": "Detect whether full disk encryption is disabled on the device.",
    "androidScreenLockDisabled": "Screen lock disabled",
    "androidScreenLockDisabledLabel": "Detect whether screen lock has been disabled.",
    "androidKnoxAttestationEnabled": "KNOX Attestation enabled",
    "androidKnoxAttestationEnabledLabel": "Detect whether KNOX Attestation has been enabled.",
    "androidDeveloperModeDetectionEnabled": "Developer mode enabled",
    "androidDeveloperModeDetectionEnabledLabel": "Detect whether developer mode is enabled.",
    "androidUnsupportedOsEnabled": "Unsupported OS",
    "androidUnsupportedOsEnabledLabel": "Detect whether the OS version that is running on the device is allowed. At least one version must be selected.",
    "androidUnsupportedOsList": "Select the OS versions that should not be supported.",
    "androidUnsupportedOsListLeft": "Available Android versions",
    "androidUnsupportedOsListRight": "Unsupported",
    "androidUnsupportedModelEnabled": "Unsupported device model",
    "androidUnsupportedModelEnabledLabel": "Detect whether the device model is allowed. At least one model must be selected.",
    "androidUnsupportedModelListRequired": "You must select at least one model.",
    "iosPrivilegeEscalationEnabled": "Compromised device",
    "iosPrivilegeEscalationEnabledLabel": "Detect whether a device is jailbroken.",
    "iosIntegrityCheckAttestationEnabled": "App integrity attestation failure",
    "iosIntegrityCheckAttestationEnabledLabel": "Detect app integrity failures.",
    "iosSideLoadedAppEnabled": "Sideloaded apps",
    "iosSideLoadedAppEnabledLabel": "Detect whether an app from a source that was not trusted or is unidentified is installed on the device.",
    "iosMessageScanningEnabled": "Unsafe message",
    "iosMessageScanningEnabledLabel": "Detect SMS messages that contain potentially malicious URLs.",
    "iosMessageScanningOptionLabel": "Scanning option",
    "iosMessageScanningOption": {
      "CLOUD_SCANNING": "Cloud scanning",
      "ON_DEVICE_SCANNING": "On-device scanning",
      "NO_SCANNING": "No scanning"
    },
    "iosCompromisedNetworkEnabled": "Unsafe network connection",
    "iosCompromisedNetworkEnabledLabel": "Detect whether the network connection is safe or unsafe.",
    "iosScreenLockDisabled": "Screen lock disabled",
    "iosScreenLockDisabledLabel": "Detect whether screen lock has been disabled.",
    "iosUnsupportedOsEnabled": "Unsupported OS",
    "iosUnsupportedOsEnabledLabel": "Detect whether the OS version that is running on the device is allowed. At least one version must be selected.",
    "iosUnsupportedOsList": "Select the OS versions that should not be supported.",
    "iosUnsupportedOsListLeft": "Available iOS versions",
    "iosUnsupportedOsListRight": "Unsupported",
    "iosUnsupportedModelEnabled": "Unsupported device model",
    "iosUnsupportedModelEnabledLabel": "Detect whether the device model is allowed. At least one model must be selected.",
    "iosUnsupportedModelListRequired": "You must select at least one model.",
    "createPolicyPageTitle": "Add Protect Mobile policy",
    "updatePolicyPageTitle": "Protect Mobile",
    "formSubmitSnackBarError": "Please correct {{count}} errors",
    "updatePolicyPageTitleHelperText": "Last updated: {{date, datetime-short}}",
    "updateFormCopyPolicyTooltip": "Create a copy of this policy",
    "updateFormDeletePolicyTooltip": "Delete policy",
    "savePolicyPriorToCopyMessage": "Save policy before copying",
    "unexpectedErrorMessage": "The request could not be processed.",
    "unexpectedErrorWithHttpMessage": "The request could not be processed. Returned HTTP status: {{status}}",
    "unexpectedErrorWithHttpSubcodeMessage": "The request could not be processed. Returned HTTP status: {{status}}, subcode: {{subcode}}",
    "policyUpdatedMessage": "The policy was updated.",
    "policyDeletedMessage": "The policy was deleted.",
    "policyCreatedMessage": "The policy was created.",
    "deviceOsVersionLoadingErrorMessage": "The device OS version metadata could not be retrieved.",
    "deviceHardwareLoadingErrorMessage": "The device hardware metadata could not be retrieved.",
    "wifiSettingsLoadingErrorMessage": "The Wi-Fi settings could not be retrieved.",
    "busyLoading": "Loading policy ...",
    "busyDeleting": "Deleting policy ...",
    "busyUpdating": "Updating policy ...",
    "busyCreating": "Creating policy ...",
    "createPolicyAssignConfirmationDialog": {
      "title": "Assign the Protect Mobile policy",
      "description": "The policy has been created. Do you want to assign users or groups to this policy?",
      "cancelButton": "Not now",
      "confirmButton": "Yes"
    },
    "modifiedPolicyConfirmationDialog": {
      "title": "Unsaved changes",
      "description": "Do you want to leave this page? Your changes have not been saved.",
      "cancelButton": "Cancel",
      "confirmButton": "Leave page"
    },
    "batchDeletePolicyConflictErrorConfirmationDialog": {
      "title": "Delete failure",
      "description": "The following policies could not be deleted because they are assigned users or groups:",
      "cancelButton": "Close"
    },
    "batchDeletePolicyErrorConfirmationDialog": {
      "title": "Delete failure",
      "description": "The following policies could not be deleted:",
      "cancelButton": "Close"
    },
    "deletePolicyConfirmationDialog": {
      "title": "Delete confirmation",
      "description": "Do you want to delete the {{name}} policy?",
      "deleteNote": "You must remove all users and groups associated with a policy before you delete it.",
      "cancelButton": "Cancel",
      "confirmButton": "Delete"
    },
    "serverError": {
      "update": "The changes could not be saved.",
      "delete": "The policy could not be deleted.",
      "deleteWithUsers": "The policy could not be deleted because it is assigned to users.",
      "deleteWithGroups": "The policy could not be deleted because it is assigned to groups.",
      "deleteWithUsersAndGroups": "The policy could not be deleted because it is assigned to users and groups.",
      "deletePolicies": "The policies could not be deleted."
    },
    "androidEditUnsupportedDeviceModelLabel": "Edit restricted Android device models",
    "iosEditUnsupportedDeviceModelLabel": "Edit restricted iOS device models",
    "selectDeviceModelDialog": {
      "title": "Restricted device models",
      "description": "Select the device models that are restricted",
      "searchText": "Search for device models"
    },
    "androidViewUnsupportedDeviceModelLabel": "View restricted Android device models",
    "iosViewUnsupportedDeviceModelLabel": "View restricted iOS device models",
    "viewDeviceModelDialog": {
      "title": "Restricted device models",
      "noData": "No device models to display"
    },
    "warningNotificationsIntervalTypeLabel": "Interval period",
    "deviceSettingsInformationLabel": "Device Settings",
    "rank": {
      "successfulUpdate": "The ranking was updated."
    },
    "androidMaliciousAppEnabledDeviceNotify": "A malicious apps notification will be sent to the user's device.",
    "androidMaliciousAppEnabledEmailNotify": "A malicious apps email notification will be sent to the user.",
    "androidSideLoadedAppEnabledDeviceNotify": "A sideloaded apps notification will be sent to the user's device.",
    "androidSideLoadedAppEnabledEmailNotify": "A sideloaded apps email notification will be sent to the user.",
    "androidPrivilegeEscalationEnabledDeviceNotify": "A compromised device apps notification will be sent to the user's device.",
    "androidPrivilegeEscalationEnabledEmailNotify": "A compromised device apps email notification will be sent to the user.",
    "androidScreenLockDisabledDeviceNotify": "A screen lock disabled notification will be sent to the user's device.",
    "androidScreenLockDisabledEmailNotify": "A screen lock disabled email notification will be sent to the user.",
    "androidKnoxAttestationEnabledDeviceNotify": "A Knox attestation notification will be sent to the user's device.",
    "androidKnoxAttestationEnabledEmailNotify": "A Knox attestation email notification will be sent to the user.",
    "androidDeveloperModeDetectionEnabledDeviceNotify": "A developer mode enabled notification will be sent to the user's device.",
    "androidDeveloperModeDetectionEnabledEmailNotify": "A developer mode enabled email notification will be sent to the user.",
    "androidEncryptionDisabledDeviceNotify": "An encryption disabled notification will be sent to the user's device.",
    "androidEncryptionDisabledEmailNotify": "An encryption disabled email notification will be sent to the user.",
    "androidUnsupportedOsEnabledDeviceNotify": "An unsupported OS notification will be sent to the user's device.",
    "androidUnsupportedOsEnabledEmailNotify": "An unsupported OS email notification will be sent to the user.",
    "androidHwAttestationEnabledDeviceNotify": "A hardware attestation failed notification will be sent to the user's device.",
    "androidHwAttestationEnabledEmailNotify": "A hardware attestation failed email notification will be sent to the user.",
    "androidSafetynetAttestationEnabledDeviceNotify": "A SafetyNet attestation failed notification will be sent to the user's device.",
    "androidSafetynetAttestationEnabledEmailNotify": "A SafetyNet attestation failed email notification will be sent to the user.",
    "androidHwAttestationSecurityPatchEnabledDeviceNotify": "A security patch attestation failed notification will be sent to the user's device.",
    "androidHwAttestationSecurityPatchEnabledEmailNotify": "A security patch attestation failed email notification will be sent to the user.",
    "androidCompromisedNetworkEnabledDeviceNotify": "An unsafe network notification will be sent to the user's device.",
    "androidCompromisedNetworkEnabledEmailNotify": "An unsafe network email notification will be sent to the user.",
    "androidMessageScanningEnabledDeviceNotify": "An unsafe message notification will be sent to the user's device.",
    "androidMessageScanningEnabledEmailNotify": "An unsafe message email notification will be sent to the user.",
    "androidInsecureWifiEnabledDeviceNotify": "An insecure Wi-Fi notification will be sent to the user's device.",
    "androidInsecureWifiEnabledEmailNotify": "An insecure Wi-Fi email notification will be sent to the user.",
    "androidUnsupportedModelEnabledDeviceNotify": "An unsupported device model notification will be sent to the user's device.",
    "androidUnsupportedModelEnabledEmailNotify": "An unsupported device model email notification will be sent to the user.",
    "iosUnsupportedModelEnabledDeviceNotify": "An unsupported device model notification will be sent to the user's device.",
    "iosUnsupportedModelEnabledEmailNotify": "An unsupported device model email notification will be sent to the user.",
    "iosSideLoadedAppEnabledDeviceNotify": "A sideloaded apps notification will be sent to the user's device.",
    "iosSideLoadedAppEnabledEmailNotify": "A sideloaded apps email notification will be sent to the user.",
    "iosPrivilegeEscalationEnabledDeviceNotify": "A compromised device apps notification will be sent to the user's device.",
    "iosPrivilegeEscalationEnabledEmailNotify": "A compromised device apps email notification will be sent to the user.",
    "iosScreenLockDisabledDeviceNotify": "A screen lock disabled notification will be sent to the user's device.",
    "iosScreenLockDisabledEmailNotify": "A screen lock disabled email notification will be sent to the user.",
    "iosUnsupportedOsEnabledDeviceNotify": "An unsupported OS notification will be sent to the user's device.",
    "iosUnsupportedOsEnabledEmailNotify": "An unsupported OS email notification will be sent to the user.",
    "iosIntegrityCheckAttestationEnabledDeviceNotify": "A hardware attestation failed notification will be sent to the user's device.",
    "iosIntegrityCheckAttestationEnabledEmailNotify": "A hardware attestation failed email notification will be sent to the user.",
    "iosCompromisedNetworkEnabledDeviceNotify": "An unsafe network notification will be sent to the user's device.",
    "iosCompromisedNetworkEnabledEmailNotify": "An unsafe network email notification will be sent to the user."
  },
  "mobileAlert": {
    "export": {
      "currentFiltersRadioButton": "Current filters",
      "title": "Export mobile alerts",
      "errorMessage": "The mobile alerts could not be exported.",
      "everythingRadioButton": "Everything",
      "successMessage": "The mobile alerts were exported.",
      "cancelButton": "Cancel",
      "confirmButton": "Export"
    },
    "errorMessageGeneric": "An error occurred. Please try again.",
    "ignoreButton": "Ignore",
    "ignore": {
      "title": "Ignore mobile alerts",
      "description": "Do you want to ignore the {{selected}} selected mobile alerts?",
      "descriptionIgnoreAll": "Do you want to ignore all mobile alerts?",
      "descriptionIgnoreAllExcludes": "Do you want to ignore all mobile alerts except the {{selected}} selected?",
      "note": "This cannot be undone.",
      "successIgnoreAllMessage": "All mobile alerts will be ignored.",
      "successMessage": "The {{selected}} selected mobile alerts will be ignored.",
      "cancelButton": "Cancel",
      "confirmButton": "Ignore"
    },
    "list": {
      "sideNavigationTitle": "Protection",
      "pageTitle": "Protect Mobile alerts",
      "results": "Viewing {{viewing}} out of {{total}}",
      "resultsSimple": "Viewing {{viewing}}",
      "searchPlaceholder": "Search for policies",
      "selected": "selected",
      "noData": "No data",
      "columns": {
        "status": "Status",
        "type": "Type",
        "name": "Name",
        "description": "Description",
        "user": "User",
        "device": "Device",
        "detected": "Detected",
        "threatCount": "# of threats",
        "deviceCount": "# of devices",
        "detection": "Detection Time"
      },
      "filters": {
        "status": "Status",
        "type": "Type",
        "name": "Name",
        "description": "Description",
        "user": "User",
        "device": "Device",
        "detected": "Detected",
        "min": {
          "length": "You must enter at least {{filterLength}} characters."
        }
      },
      "columnPicker": "Table columns"
    },
    "groupByLabel": "Group by setting",
    "groupBy": {
      "none": "Group by none",
      "detection": "Group by detection",
      "device": "Group by device"
    }
  },
  "deviceMetadata": {
    "allBrands": "*All brands",
    "allVendors": "*All vendors",
    "hardwareVendor": {
      "ACER": "Acer",
      "ALL": "All",
      "ANDROID_UNKNOWN": "Unknown",
      "APPLE": "Apple",
      "ASUS": "Asus",
      "BLACKBERRY": "BlackBerry",
      "BLU": "BLU",
      "FAIRPHONE": "Fairphone",
      "GOOGLE": "Google",
      "HP": "HP",
      "HTC": "HTC",
      "HUAWEI": "Huawei",
      "HYUNDAI": "Hyundai",
      "INTERMEC": "Intermec",
      "KYOCERA": "Kyocera",
      "LENOVO": "Lenovo",
      "LG": "LG",
      "LGE": "LGE",
      "MEDION": "MEDION",
      "MICROMAX": "Micromax",
      "MOTOROLA": "Motorola",
      "NEC": "NEC",
      "NOKIA": "Nokia",
      "NUBIA": "Nubia",
      "ONEPLUS": "OnePlus",
      "OPPO": "OPPO",
      "PANASONIC": "Panasonic",
      "PANTECH": "Pantech",
      "PRESTIGIO": "Prestigio",
      "RECON": "Recon",
      "SAMSUNG": "Samsung",
      "SHARP": "Sharp",
      "SILENT_CIRCLE": "Silent Circle",
      "SONIM": "Sonim",
      "SONY": "Sony",
      "SONYERICSSON": "Sony",
      "SONY_ERICSSON": "Sony",
      "TCL_COMMUNICATION_LTD": "TCL",
      "TCT_ALCATEL": "Alcatel",
      "TESCO": "Tesco",
      "TG_CO": "TG&Co",
      "UNKNOWN": "Unknown",
      "VERIZON_WIRELESS": "Verizon Wireless",
      "VUZIX": "Vuzix",
      "WIKO": "Wiko",
      "WP_UNKNOWN": "Windows device",
      "XIAOMI": "Xiaomi",
      "XPLORE_TECHNOLOGIES": "Xplore Technologies",
      "YU": "YU",
      "ZTE": "ZTE"
    }
  },
  "exclusion": {
    "entitiesAppsUpperCase": "Applications",
    "entitiesAppsLowerCase": "applications",
    "entityAppLowerCase": "application",
    "entitiesCertsUpperCase": "Developer certificates",
    "entitiesCertsLowerCase": "developer certificates",
    "entityCertLowerCase": "developer certificate",
    "entitiesDomainsUpperCase": "Domains",
    "entitiesDomainsLowerCase": "domains",
    "entityDomainLowerCase": "domain",
    "entitiesIps": "IP addresses",
    "entityIp": "IP address",
    "deleteConfirmation": "Delete confirmation",
    "deleteConfirmationMsg": "Do you want to delete the following {{entities}}?",
    "deleteTooManyConfirmationMsg": "Do you want to delete {{count}} {{entities}}?",
    "failedCountDeleteErrorMsg": "{{failedCount}} {{entities}} could not be deleted.",
    "deleteMultipleErrorMsg": "{{entities}} could not be deleted.",
    "deleteSingleErrMsg": "The {{entity}} could not be deleted.",
    "singleDeleteSuccessMsg": "The {{entity}} was deleted.",
    "multipleDeleteSuccessMsg": "The {{entities}} were deleted.",
    "systemObjectsRemovedFromList": "System objects cannot be deleted and have been removed from the list below.",
    "list": {
      "noData": "No data",
      "columnPicker": "Table columns",
      "results": "Viewing {{viewing}} out of {{total}}"
    },
    "settings": "Settings",
    "apps": {
      "addApp": "Add app",
      "name": "App name",
      "os": "OS",
      "vendor": "Vendor",
      "version": "Version",
      "hashValue": "Hash value",
      "description": "Description",
      "duplicateAppErrorMsg": "This app already exists in the approved or restricted list.",
      "applicationCreateSuccessMsg": "The app was added.",
      "applicationCreateErrorMsg": "The app could not be added.",
      "applicationEditSuccessMsg": "The app was edited.",
      "applicationEditErrorMsg": "The app could not be edited.",
      "addViaSelect": "Select an app file",
      "addManually": "Manually enter the app's hash info",
      "addViaImport": "Import an app list from .csv file",
      "applicationImportUploadTitle": "Import apps",
      "applicationImportFailureMsg": "The apps could not be imported.",
      "applicationImportSingularSuccessMsg": "The app was imported.",
      "applicationImportMultipleSuccessesMsg": "{{count}} apps were imported.",
      "applicationImportSingularFailureMsg": "The app could not be imported.",
      "applicationImportMultipleFailuresMsg": "{{count}} apps could not be imported.",
      "applicationHashErrorMsg": "The app hash is invalid."
    },
    "developers": {
      "addDevCert": "Add certificate",
      "name": "Developer name",
      "os": "OS",
      "subject": "Subject",
      "issuer": "Issuer",
      "identifier": "Identifier",
      "description": "Description",
      "devCertCreateSuccessMsg": "The developer certificate was added.",
      "devCertCreateErrorMsg": "The developer certificate could not be added.",
      "devCertEditSuccessMsg": "The developer certificate was edited.",
      "devCertEditErrorMsg": "The developer certificate could not be edited.",
      "addViaSelect": "Select an app to get certificate information",
      "addManually": "Manually enter certificate information",
      "addViaImport": "Import certificate list from .csv file",
      "devCertImportUploadTitle": "Import certificates",
      "devCertImportFailureMsg": "The certificates could not be imported.",
      "devCertImportSingularSuccessMsg": "The certificate was imported.",
      "devCertImportMultipleSuccessesMsg": "{{count}} certificates were imported.",
      "devCertImportSingularFailureMsg": "The certificate could not be imported.",
      "devCertImportMultipleFailuresMsg": "{{count}} certificates could not be imported.",
      "duplicateDevCertErrorMsg": "This developer already exists in the approved or restricted list.",
      "systemDevCertsOnlyCannotBeDeleted": "Developer certificates for system apps cannot be deleted."
    },
    "webAddresses": {
      "duplicateIPErrorMsg": "This IP address already exists in the approved or restricted list.",
      "pageHeader": "Address configuration",
      "addFormName": "Add IP addresses",
      "addIPAddress": "Add IP address",
      "editFormName": "IP address details",
      "ipAddressStart": "IP address or start of range",
      "ipAddressEnd": "End of IP address range",
      "ipAddressCreateSuccessMsg": "The IP address was added.",
      "ipAddressCreateErrorMsg": "The IP address could not be added.",
      "ipAddressOverlappingRestrictedErrorMsg": "The IP range overlaps an IP range in the restricted list.",
      "ipAddressOverlappingApprovedErrorMsg": "The IP range overlaps an IP range in the safe list.",
      "ipAddressEditSuccessMsg": "The IP address was edited.",
      "ipAddressEditErrorMsg": "The IP address could not be edited.",
      "addManually": "Manually enter IP address information",
      "addViaImport": "Import IP address list from .csv file",
      "ipAddressImportUploadTitle": "Import IP addresses",
      "ipAddressImportFailureMsg": "The IP addresses could not be imported.",
      "ipAddressImportSingularSuccessMsg": "The IP address was imported.",
      "ipAddressImportMultipleSuccessesMsg": "{{count}} IP addresses were imported.",
      "ipAddressImportSingularFailureMsg": "The IP address could not be imported.",
      "ipAddressImportMultipleFailuresMsg": "{{count}} IP addresses could not be imported.",
      "searchPlaceholder": "Search for IP addresses",
      "ipValidation": {
        "invalidSymbol": "IPv4 address must contain only digits and dots '.'",
        "fourBlocksRequired": "IPv4 address must contain 4 not empty blocks split by dot '.'",
        "invalidRanges": "Each IPv4 address block must be in range between 0 and 255",
        "startEndEqual": "Start and End IPv4 addresses must not be equal",
        "startShouldLessThanEnd": "Start must be less than End in IP addresses range",
        "endShouldBeGreaterThanStart": "End must be greater than Start in IP addresses range"
      }
    },
    "domains": {
      "duplicateDomainErrorMsg": "This domain already exists in the approved or restricted list.",
      "pageHeader": "Address configuration",
      "addFormName": "Add a domain",
      "addDomain": "Add domain",
      "editFormName": "Domain details",
      "domainCreateSuccessMsg": "The domain was added.",
      "domainCreateErrorMsg": "The domain could not be added.",
      "domainEditSuccessMsg": "The domain was edited.",
      "domainEditErrorMsg": "The domain could not be edited.",
      "addManually": "Manually enter domain information",
      "addViaImport": "Import domain list from .csv file",
      "domainImportUploadTitle": "Import domains",
      "domainImportFailureMsg": "The domains could not be imported.",
      "domainImportSingularSuccessMsg": "The domain was imported.",
      "domainImportMultipleSuccessesMsg": "{{count}} domains were imported.",
      "domainImportSingularFailureMsg": "The domain could not be imported.",
      "domainImportMultipleFailuresMsg": "{{count}} domains could not be imported.",
      "domain": "Domain",
      "searchPlaceholder": "Search for domains",
      "hostValidation": {
        "invalidField": "Invalid field"
      }
    },
    "form": {
      "requiredField": "This field is required."
    },
    "approvedDevelopers": {
      "itemName": "Developers",
      "description": "Add a developer's signing certificate to add all apps from that developer to the safe list. Apps with the specified signing certificate will not be sent to BlackBerry for malware scanning and will not be identified as sideloaded. For Android, the thumbprint from the signature attribute is used as the identifier. For iOS, the device compares information from the app developer's signing certificate (common name) with the certificates (common names) in the Safe developers payload that is sent from UES. To determine if an iOS device has sideloaded apps installed, the server compares information from the app's provisioning profile with the provisioning profiles and installed app list payloads that are sent from the iOS device. To add apps that can be sideloaded on the device, you must import the app to UES so that it is added to the safe list automatically.",
      "title": "Safe Developers",
      "noData": "No data",
      "addFormName": "Add a developer certificate",
      "editFormName": "Edit the developer certificate",
      "list": {
        "noData": "No data"
      }
    },
    "restrictedDevelopers": {
      "itemName": "Developers",
      "description": "Add a developer's signing certificates to add all apps from that developer to the restricted list using the certificates. Apps with the specified signing certificates will not be sent to BlackBerry for malware scanning. For Android the thumbprint from the signature attribute is used as the identifier.",
      "noData": "No data",
      "addFormName": "Add a developer certificate",
      "editFormName": "Edit the developer certificate",
      "title": "Restricted Developers"
    },
    "approvedApps": {
      "itemName": "Apps",
      "description": "Specify the Android apps to add to the safe list. Android apps that have these characteristics will not be sent to BlackBerry for malware scanning and will not be identified as sideloaded. If an app contains multiple .apk files, you must add the hashes for all .apk files to the safe list. Optionally, you can add the app developer's signing certificate to the Safe developers list instead of adding the .apk file hashes. Android and iOS apps that your organization develops are automatically verified and added to the safe list.",
      "title": "Safe Apps",
      "noData": "No data",
      "addFormName": "Add a safe app",
      "editFormName": "Edit the safe app"
    },
    "restrictedApps": {
      "itemName": "Apps",
      "description": "Specify the Android apps to add to the restricted list. Android apps that have these characteristics will not be sent to BlackBerry for malware scanning.",
      "noData": "No data",
      "addFormName": "Add a restricted app",
      "editFormName": "Edit the restricted app",
      "title": "Restricted Apps"
    },
    "approvedIpAddresses": {
      "itemName": "IP addresses",
      "title": "Safe IP Addresses",
      "noData": "No data",
      "description": "Specify the IP addresses or ranges that will be treated as safe during message scanning."
    },
    "restrictedIpAddresses": {
      "itemName": "IP addresses",
      "title": "Restricted IP Addresses",
      "description": "Specify the IP addresses or ranges that will be treated as unsafe during message scanning.",
      "noData": "No data"
    },
    "restrictedEndpointSourceIpAddress": {
      "itemName": "Endpoint Source IP Address",
      "title": "Endpoint Source IP Address",
      "description": "Specify the IP addresses or ranges that will be treated as unsafe during message scanning.",
      "noData": "No data"
    },
    "approvedEndpointSourceIpAddress": {
      "itemName": "Endpoint Source IP Address",
      "title": "Endpoint Source IP Address",
      "description": "Specify the IP addresses or ranges that will be treated as safe during message scanning.",
      "noData": "No data"
    },
    "approvedDomains": {
      "itemName": "Domains",
      "title": "Safe Domains",
      "noData": "No data",
      "description": "Specify the domains that will be treated as safe during message scanning."
    },
    "restrictedDomains": {
      "itemName": "Domains",
      "title": "Restricted Domains",
      "noData": "No restricted domains to display",
      "description": "Specify the domains that will be treated as unsafe during message scanning."
    },
    "appFileUpload": {
      "title": "App file upload",
      "description": "Select an .ipa or .apk file to upload.",
      "descriptionIosRestrictedDisabled": "Select an .apk file to upload.",
      "error": "The app file could not be uploaded.",
      "parseError": "The file could not be parsed.",
      "invalidContentError": "The file contents are invalid.",
      "errorUnsupportedFileTypeNotAPK": "The file type is invalid. Only .apk files are supported.",
      "errorUnsupportedFileTypeNotIPAOrAPK": "The file type is invalid. Only .ipa or .apk files are supported.",
      "errorUnsupportedFileType": "The file type is not supported for upload."
    }
  },
  "dashboard": {
    "devicesWithVulnerableOs": "Devices with Vulnerable OS",
    "mobileOsVulnerabilities": "Mobile OS Vulnerabilities",
    "mobileOsWithVulnerabilities": "Mobile OSs with Vulnerabilities",
    "mobileNetworkThreats": "Mobile Network Alerts",
    "mobileAppThreats": "Mobile App Alerts",
    "title": "Protect Mobile",
    "mobilePhishingThreats": "Malicious URL Alerts",
    "mobileDeviceSecurityThreats": "Mobile Device Security Alerts",
    "mobileThreatsByCategory": "Mobile Alerts by Category",
    "topMaliciousAppThreats": "Top Malicious Apps",
    "topSideLoadedAppThreats": "Top Sideloaded Apps",
    "topRestrictedAppThreats": "Top Restricted Apps",
    "topInsecureWifiThreats": "Top Insecure Wi-Fi Networks",
    "topCompromisedNetworkThreats": "Top Unsafe Networks",
    "topUnsupportedOsThreats": "Top Unsupported OSs",
    "topUnsupportedModelThreats": "Top Unsupported Device Models",
    "topUnsupportedSecurityPatchThreats": "Top Unsupported Security Patches",
    "topUnsafeMessages": "Top Unsafe Message URLs",
    "topMobileThreatDetections": "Top Mobile Alerts Detections",
    "topMobileThreatDevices": "Top Devices with Mobile Alerts",
    "totalThreatsDetected": "Mobile Alerts Detected",
    "totalThreatsDetectedDescription": "mobile alerts detected",
    "mobileDevicesWithThreatAlerts": "Mobile Devices with Alerts",
    "mobileDevicesWithThreatAlertsDescription": "mobile devices with alerts",
    "enabledDevices": "Mobile Devices Enabled for Alerts Detection"
  },
  "threats": {
    "unresponsiveAgent": "Unresponsive Agent",
    "iOsIntegrityFailure": "App integrity attestation failure",
    "androidSafetyNetFailure": "SafetyNet attestation failure",
    "androidHWFailure": "Hardware attestation failure",
    "maliciousApplication": "Malicious app",
    "sideLoadedApplication": "Sideloaded app",
    "restrictedApplication": "Restricted app",
    "compromisedNetwork": "Unsafe network",
    "insecureWiFi": "Insecure Wi-Fi",
    "unsafeMessage": "Unsafe message",
    "jailbrokenOrRooted": "Compromised device",
    "deviceEncryption": "Encryption disabled",
    "deviceScreenlock": "Screen lock disabled",
    "unsupportedOS": "Unsupported OS",
    "unsupportedModel": "Unsupported device model",
    "securityPatch": "Unsupported security patch",
    "network": "Network",
    "application": "App",
    "unsafeBrowsing": "Unsafe browsing",
    "deviceSecurity": "Device security",
    "safeBrowsing": "Safe browsing",
    "unresolved": "Unresolved alerts",
    "unsafeURL": "Unsafe URL",
    "enabledDevices": "of {{count}} mobile devices enabled for threat detection",
    "unsupportedSecurityPatch": "Unsupported security patch",
    "developerMode": "Developer mode",
    "alertDetail": {
      "overview": {
        "title": "Alert Overview",
        "label": {
          "name": "Name",
          "time": "Detection time",
          "resolved": "Resolved time"
        }
      },
      "assets": {
        "title": "Affected Asset",
        "label": {
          "user": "User",
          "device": "Device"
        }
      },
      "keys": {
        "osVersion": "OS version",
        "osName": "OS name",
        "packageName": "Package name",
        "packageVersion": "Package version",
        "applicationSha256": "SHA256",
        "installerSource": "Installer source",
        "attestationSubType": "Sub type",
        "attestationState": "State",
        "attestationRuleFailure": "Rule",
        "ssid": "Network SSID",
        "attestationType": "Attestation type",
        "isSystemApplication": "System Application",
        "supportedProtocols": "Supported Protocols",
        "maliciousURLs": "Malicious URLs",
        "threshold": "Threshold",
        "lastContact": "Last contact time"
      }
    }
  },
  "threatStatus": {
    "new": "New",
    "resolved": "Resolved",
    "ignored": "Ignored",
    "all": "All"
  },
  "vulnerability": {
    "mobileOs": "Mobile OS",
    "columnPicker": "Table columns",
    "noDataLabel": "No data",
    "totalOsVersions": "total OS versions",
    "results": "results",
    "osdetails": {
      "title1": "Protection",
      "title2": "Vulnerabilities",
      "platform": "OS",
      "version": "OS version",
      "endpointCount": "Affected Assets",
      "totalCve": "Total CVE",
      "criticalCve": "Critical CVE",
      "highCve": "High CVE",
      "mediumCve": "Medium CVE",
      "lowCve": "Low CVE"
    },
    "cvedetails": {
      "title1": "Vulnerabilities",
      "severity": "Severity",
      "cve": "CVE",
      "cveScore": "CVE risk score",
      "cveDescription": "Description",
      "cveLastModifiedTime": "Time",
      "cveDateFormat": "{{date, datetime-short}}",
      "deviceModelFilter": "Device model filter",
      "userFilter": "User filter",
      "emailFilter": "Email filter"
    },
    "severities": {
      "critical": "Critical",
      "high": "High",
      "medium": "Medium",
      "low": "Low"
    },
    "errors": {
      "networkAccess": "The data could not be retrieved."
    }
  },
  "responseActions": {
    "status": "Status",
    "compliant": "Device compliant",
    "nonCompliant": "Device not compliant",
    "noResponseActionAvailable": "No response actions are available.",
    "policy": "Protect Mobile policy",
    "body": {
      "compliant": "This device is compliant with your organization's policies.",
      "nonCompliant": "This device is not compliant with your organization's policies."
    },
    "error": {
      "fetch": "The compliance information could not be retrieved."
    },
    "threatCompliance": {
      "insecureWiFiFeatureDisabled": "(Feature disabled by user)",
      "tableHeaders": {
        "detection": "Detection",
        "notificationForViolation": "Notification",
        "notificationForViolationTooltip": "Notification status",
        "action": "Action",
        "actionTooltip": "Current state of action taken on device"
      },
      "notification": {
        "notConfigured": "No notification configured",
        "sentOfTotalWithSentDate": "{{sentCount}} of {{totalCount}} email notifications sent: {{sentDateTime}}",
        "nextSentDateTime": "Next: {{nextSentDateTime}}"
      },
      "remediation": {
        "actionPending": "Action pending",
        "actionTaken": "Action taken"
      }
    }
  },
  "restrictedList": "Restricted list",
  "safeList": "Safe list",
  "tabs": {
    "safe": {
      "label": "Safe"
    },
    "restricted": {
      "label": "Restricted"
    }
  },
  "title": {
    "settings": "Settings",
    "globalList": "Global List (Mobile)"
  }
}
