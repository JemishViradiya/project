import React, { useCallback, useState } from 'react'

import type { SimpleFilter } from '@ues/behaviours'
import {
  AutocompleteSearchFilter,
  CheckboxFilter,
  NumericRangeFilter,
  OPERATOR_VALUES,
  QuickSearchFilter,
  useAutocompleteSearchFilter,
  useCheckboxFilter,
  useNumericRangeFilter,
  useQuickSearchFilter,
  useTableFilter,
} from '@ues/behaviours'

export const CheckBoxFilterComponent = ({ dataKey, label, items }) => {
  const filterProps = useTableFilter<SimpleFilter<any[]>>()
  const props = useCheckboxFilter({ filterProps, key: dataKey })
  return <CheckboxFilter label={label} items={items} {...props} />
}

export const NumericRangeFilterComponent = ({ dataKey, label }) => {
  const filterProps = useTableFilter<SimpleFilter<[number, number]>>()
  const props = useNumericRangeFilter({ filterProps, key: dataKey, min: 0, max: 10 })
  return <NumericRangeFilter min={0} max={10} label={label} {...props} />
}

export const NameFilterComponent = ({ dataKey, label }) => {
  const filterProps = useTableFilter<SimpleFilter<string>>()
  const [options, setOptions] = useState([])

  const getOptions = useCallback(value => {
    setOptions([])
  }, [])

  const clearOptions = useCallback(() => {
    setOptions([])
  }, [])

  const props = useAutocompleteSearchFilter({
    filterProps,
    key: dataKey,
    defaultOperator: OPERATOR_VALUES.CONTAINS,
    options,
    getOptions,
    clearOptions,
  })
  return <AutocompleteSearchFilter label={label} operators={[]} {...props} />
}

export const StringFilterComponent = ({ fieldName, label }) => {
  const filterProps = useTableFilter<SimpleFilter<string>>()
  const props = useQuickSearchFilter({ filterProps, key: fieldName, defaultOperator: OPERATOR_VALUES.CONTAINS })
  return <QuickSearchFilter label={label} operators={[]} {...props} />
}
