const path = require('path')

const hasTypescript = !process.env.VSCODE_CWD
const ifTypescript = opts => (hasTypescript ? opts : {})

module.exports = {
  env: {
    browser: true,
    commonjs: true,
    es6: true,
    jest: true,
  },
  globals: {
    process: 'readonly',
    cy: 'off',
    I: false,
    JQuery: 'readonly',
    globalThis: 'readonly',
  },
  parserOptions: {
    tsconfigRootDir: path.resolve(__dirname, '../..'),
  },
  extends: ['plugin:sonarjs/recommended'],
  overrides: [
    {
      files: ['jest.config.js'],
      rules: {
        ...ifTypescript({
          '@typescript-eslint/no-var-requires': 'off',
        }),
      },
      env: {
        browser: false,
        es6: false,
        commonjs: true,
        node: true,
      },
    },
    {
      files: ['*.jsx', '*.js'],
      extends: ['plugin:jsx-a11y/recommended'],
      rules: {
        'no-unused-vars': 'off',
        'jsx-a11y/control-has-associated-label': [
          1,
          {
            labelAttributes: ['label'],
            controlComponents: ['CustomComponent'],
            ignoreElements: ['audio', 'canvas', 'embed', 'input', 'textarea', 'tr', 'video'],
            ignoreRoles: ['grid', 'toolbar', 'tree', 'treegrid'],
            depth: 15,
          },
        ],
      },
    },
    {
      files: ['*.tsx', '*.ts'],
      extends: ['plugin:jsx-a11y/recommended', 'plugin:import/typescript'],
      rules: {
        'no-unused-vars': 'off',
        'jsx-a11y/control-has-associated-label': [
          1,
          {
            labelAttributes: ['label'],
            controlComponents: ['CustomComponent'],
            ignoreElements: ['audio', 'canvas', 'embed', 'input', 'textarea', 'tr', 'video'],
            ignoreRoles: ['grid', 'toolbar', 'tree', 'treegrid'],
            depth: 15,
          },
        ],
      },
    },
    {
      files: ['*.spec.ts', '*.spec.js', '*.spec.tsx', '*.spec.jsx', '**/__mocks__/**/*', '**/__fixtures__/**/*'],
      rules: {
        'sonarjs/cognitive-complexity': 'off',
        'sonarjs/no-all-duplicated-branches': 'off',
        'sonarjs/no-collapsible-if': 'off',
        'sonarjs/no-duplicate-string': 'off',
        'sonarjs/no-identical-conditions': 'off',
        'sonarjs/no-identical-functions': 'off',
        'sonarjs/no-identical-expressions': 'off',
        'sonarjs/no-inverted-boolean-check': 'warn',
        'sonarjs/no-same-line-conditional': 'warn',
        'sonarjs/no-use-of-empty-return-value': 'warn',
        'sonarjs/no-useless-catch': 'warn',
        ...ifTypescript({
          '@typescript-eslint/no-explicit-any': 'off',
          '@typescript-eslint/no-unused-vars': 'off',
          '@typescript-eslint/ban-ts-comment': 'off',
          '@typescript-eslint/no-empty-function': 'off',
        }),
      },
    },
  ],
  rules: {
    ...ifTypescript({
      '@typescript-eslint/consistent-type-imports': [
        'error',
        {
          prefer: 'type-imports',
          disallowTypeAnnotations: false,
        },
      ],
      '@typescript-eslint/consistent-type-assertions': 'warn',
      '@typescript-eslint/no-array-constructor': 'warn',
      '@typescript-eslint/no-namespace': 'error',
      '@typescript-eslint/no-unused-vars': [
        'warn',
        {
          args: 'none',
          ignoreRestSiblings: true,
          varsIgnorePattern: '_.*',
        },
      ],
      '@typescript-eslint/no-use-before-define': [
        'warn',
        {
          classes: false,
          functions: false,
          typedefs: false,
          variables: false,
        },
      ],
      '@typescript-eslint/no-useless-constructor': 'warn',
      '@typescript-eslint/no-var-requires': 'off',
    }),
    'sonarjs/cognitive-complexity': ['error', 25],
    'array-callback-return': 'warn',
    'default-case': 'off',
    'dot-location': ['warn', 'property'],
    eqeqeq: ['warn', 'smart'],
    'getter-return': 'warn',
    'no-array-constructor': 'off',
    'no-caller': 'warn',
    'no-cond-assign': ['warn', 'except-parens'],
    'no-const-assign': 'warn',
    'no-control-regex': 'warn',
    'no-delete-var': 'warn',
    'no-dupe-args': 'warn',
    'no-dupe-class-members': 'off',
    'no-dupe-keys': 'warn',
    'no-duplicate-case': 'warn',
    'no-empty-character-class': 'warn',
    'no-empty-pattern': 'warn',
    'no-eval': 'warn',
    'no-ex-assign': 'warn',
    'no-extend-native': 'warn',
    'no-extra-bind': 'warn',
    'no-extra-label': 'warn',
    'no-fallthrough': 'warn',
    'no-func-assign': 'warn',
    'no-implied-eval': 'warn',
    'no-invalid-regexp': 'warn',
    'no-iterator': 'warn',
    'no-label-var': 'warn',
    'no-labels': [
      'warn',
      {
        allowLoop: true,
        allowSwitch: false,
      },
    ],
    'no-lone-blocks': 'warn',
    'no-loop-func': 'warn',
    'no-mixed-operators': 'off',
    'no-multi-str': 'warn',
    'no-native-reassign': 'warn',
    'no-negated-in-lhs': 'warn',
    'no-new-func': 'warn',
    'no-new-object': 'warn',
    'no-new-symbol': 'warn',
    'no-new-wrappers': 'warn',
    'no-obj-calls': 'warn',
    'no-octal': 'warn',
    'no-octal-escape': 'warn',
    'no-redeclare': 'warn',
    'no-regex-spaces': 'warn',
    'no-restricted-globals': [
      'error',
      {
        name: 'cy',
        message: 'Use custom cypress wrapper I',
      },
      'addEventListener',
      'blur',
      'close',
      'closed',
      'confirm',
      'defaultStatus',
      'defaultstatus',
      'event',
      'external',
      'find',
      'focus',
      'frameElement',
      'frames',
      'history',
      'innerHeight',
      'innerWidth',
      'length',
      'location',
      'locationbar',
      'menubar',
      'moveBy',
      'moveTo',
      'name',
      'onblur',
      'onerror',
      'onfocus',
      'onload',
      'onresize',
      'onunload',
      'open',
      'opener',
      'opera',
      'outerHeight',
      'outerWidth',
      'pageXOffset',
      'pageYOffset',
      'parent',
      'print',
      'removeEventListener',
      'resizeBy',
      'resizeTo',
      'screen',
      'screenLeft',
      'screenTop',
      'screenX',
      'screenY',
      'scroll',
      'scrollbars',
      'scrollBy',
      'scrollTo',
      'scrollX',
      'scrollY',
      'self',
      'status',
      'statusbar',
      'stop',
      'toolbar',
      'top',
    ],
    'no-restricted-properties': [
      'error',
      {
        message: 'Please use import() instead. More info: https://facebook.github.io/create-react-app/docs/code-splitting',
        object: 'require',
        property: 'ensure',
      },
      {
        message: 'Please use import() instead. More info: https://facebook.github.io/create-react-app/docs/code-splitting',
        object: 'System',
        property: 'import',
      },
    ],
    'no-restricted-syntax': ['warn', 'WithStatement', 'SequenceExpression'],
    'no-script-url': 'warn',
    'no-self-assign': 'warn',
    'no-self-compare': 'warn',
    'no-sequences': 'off',
    'no-shadow-restricted-names': 'warn',
    'no-sparse-arrays': 'warn',
    'no-template-curly-in-string': 'warn',
    'no-this-before-super': 'warn',
    'no-throw-literal': 'warn',
    // 'no-undef': 'error',
    'no-undef': 'off',
    'no-unexpected-multiline': 'off',
    'no-unreachable': 'warn',
    'no-unused-expressions': [
      'error',
      {
        allowShortCircuit: true,
        allowTaggedTemplates: true,
        allowTernary: true,
      },
    ],
    'no-unused-labels': 'warn',
    'no-unused-vars': [
      'warn',
      {
        args: 'none',
        ignoreRestSiblings: true,
        varsIgnorePattern: '_.*',
      },
    ],
    'no-use-before-define': 'off',
    'no-useless-computed-key': 'warn',
    'no-useless-concat': 'warn',
    'no-useless-constructor': 'off',
    'no-useless-escape': 'warn',
    'no-useless-rename': [
      'warn',
      {
        ignoreDestructuring: false,
        ignoreExport: false,
        ignoreImport: false,
      },
    ],
    'no-whitespace-before-property': 'warn',
    'no-with': 'warn',
    'require-yield': 'warn',
    strict: ['warn', 'never'],
    'unicode-bom': ['warn', 'never'],
    'use-isnan': 'warn',
    'valid-typeof': 'warn',
  },
}
