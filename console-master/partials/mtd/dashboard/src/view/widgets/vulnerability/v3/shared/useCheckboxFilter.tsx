import { get } from 'lodash-es'
import type { Dispatch } from 'react'

import type { SimpleFilter } from '@ues/behaviours'
import { OPERATOR_VALUES, usePopover } from '@ues/behaviours'

export type CheckboxFilterHookOptions = {
  activeFilters: Record<string, SimpleFilter<any[]>[]>
  onSetFilter: Dispatch<{ key: string; value: SimpleFilter<any[]> }>
  onRemoveFilter: Dispatch<string>
}
export const useCheckboxFilter = ({ activeFilters, onSetFilter, onRemoveFilter }: CheckboxFilterHookOptions, key: string) => {
  const { value: selected } = get(activeFilters, key, { value: [] }) as SimpleFilter<any[]>

  const { popoverAnchorEl, handlePopoverClick, handlePopoverClose, popoverIsOpen } = usePopover()

  const onChange = inputValue => () => {
    let { value: vals } = get(activeFilters, key, { value: [] }) as { value: any[] }
    const valIdx = vals.indexOf(inputValue)

    if (valIdx >= 0) {
      vals = vals.filter((_, i) => i !== valIdx)
    } else {
      vals = [...vals, inputValue]
    }

    if (vals.length > 0) {
      onSetFilter({
        key,
        value: { value: vals, operator: OPERATOR_VALUES.IS_IN },
      })
    } else {
      onRemoveFilter(key)
    }
  }

  return {
    popoverProps: {
      open: popoverIsOpen,
      anchorEl: popoverAnchorEl,
      onClose: handlePopoverClose,
    },
    onIconClick: handlePopoverClick,
    onChange,
    selected,
  }
}
