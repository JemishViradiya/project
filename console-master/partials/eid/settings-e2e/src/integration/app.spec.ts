import { FeatureName } from '@ues-data/shared-types'

const mockEnterprise = { name: 'Main Enterprise' }
const mockTOTP = { name: 'TOTP Test' }

describe('Partial - EID - Settings', () => {
  before(() => {
    window.localStorage.setItem('UES_DATA_MOCK', 'true')
    window.localStorage.setItem(FeatureName.UESCronosNavigation, 'false')
    window.localStorage.setItem(FeatureName.UESTOTPAuthenticatorEnabled, 'true')
    I.visit('/')
    I.loadI18nNamespaces('eid/common').then(() => {
      I.visit('/')
    })
  })

  it('Add Enterprise Authenticator', () => {
    I.findByRole('button', { name: I.translate('authenticators.add') })
      .should('exist')
      .click()
    I.findByRole('generic', { name: 'type' }).click()
    I.findByRoleWithin('listbox', 'option', { name: I.translate('authenticators.ENTERPRISE') }).click()
    I.findByLabelText(new RegExp(`${I.translate('authenticators.name')}`))
      .should('exist')
      .click()
      .clear()
      .type(I.translate('authenticators.ENTERPRISE'))
    I.findByRole('button', { name: I.translate('common.save') })
      .should('exist')
      .click()
    I.findByRole('alert').should('contain', I.translate('common.success.create')).dismissAlert()
  })

  it('Add AD Authenticator', () => {
    I.findByRole('button', { name: I.translate('authenticators.add') })
      .should('exist')
      .click()
    I.findByRole('generic', { name: 'type' }).click()
    I.findByRoleWithin('listbox', 'option', { name: I.translate('authenticators.AD') }).click()
    I.findByLabelText(new RegExp(`${I.translate('authenticators.name')}`))
      .should('exist')
      .click()
      .clear()
      .type(I.translate('authenticators.AD'))
    I.findByRole('button', { name: I.translate('common.save') })
      .should('exist')
      .click()
    I.findByRole('alert').should('contain', I.translate('common.success.create')).dismissAlert()
  })

  it('Add LDAP Authenticator', () => {
    I.findByRole('button', { name: I.translate('authenticators.add') })
      .should('exist')
      .click()
    I.findByRole('generic', { name: 'type' }).click()
    I.findByRoleWithin('listbox', 'option', { name: I.translate('authenticators.LDAP') }).click()
    I.findByLabelText(new RegExp(`${I.translate('authenticators.name')}`))
      .should('exist')
      .click()
      .clear()
      .type(I.translate('authenticators.LDAP'))
    I.findByRole('button', { name: I.translate('common.save') })
      .should('exist')
      .click()
    I.findByRole('alert').should('contain', I.translate('common.success.create')).dismissAlert()
  })

  it('Add CUR Authenticator', () => {
    I.findByRole('button', { name: I.translate('authenticators.add') })
      .should('exist')
      .click()
    I.findByRole('generic', { name: 'type' }).click()
    I.findByRoleWithin('listbox', 'option', { name: I.translate('authenticators.CUR') }).click()
    I.findByLabelText(new RegExp(`${I.translate('authenticators.name')}`))
      .should('exist')
      .click()
      .clear()
      .type(I.translate('authenticators.CUR'))
    I.findByRole('button', { name: I.translate('common.save') })
      .should('exist')
      .click()
    I.findByRole('alert').should('contain', I.translate('common.success.create')).dismissAlert()
  })

  it('Add VENUE Authenticator', () => {
    I.findByRole('button', { name: I.translate('authenticators.add') })
      .should('exist')
      .click()
    I.findByRole('generic', { name: 'type' }).click()
    I.findByRoleWithin('listbox', 'option', { name: I.translate('authenticators.VENUE') }).click()
    I.findByLabelText(new RegExp(`${I.translate('authenticators.name')}`))
      .should('exist')
      .click()
      .clear()
      .type(I.translate('authenticators.VENUE'))
    I.findByRole('button', { name: I.translate('common.save') })
      .should('exist')
      .click()
    I.findByRole('alert').should('contain', I.translate('common.success.create')).dismissAlert()
  })

  it('Add Okta Authenticator', () => {
    I.findByRole('button', { name: I.translate('authenticators.add') })
      .should('exist')
      .click()
    I.findByRole('generic', { name: 'type' }).click()
    I.findByRoleWithin('listbox', 'option', { name: I.translate('authenticators.OKTA') }).click()
    I.findByLabelText(new RegExp(`${I.translate('authenticators.name')}`))
      .should('exist')
      .click()
      .clear()
      .type(I.translate('authenticators.OKTA'))
    I.findByLabelText(new RegExp(`${I.translate('authenticators.discovery_url')}`))
      .should('exist')
      .click()
      .clear()
      .type('https://myurl.com')
    I.findByLabelText(new RegExp(`${I.translate('authenticators.client_id')}`))
      .should('exist')
      .click()
      .clear()
      .type('MYID')
    I.findByRole('button', { name: I.translate('common.save') })
      .should('exist')
      .click()
    I.findByRole('alert').should('contain', I.translate('common.success.create')).dismissAlert()
  })

  it('Add Ping Authenticator', () => {
    I.findByRole('button', { name: I.translate('authenticators.add') })
      .should('exist')
      .click()
    I.findByRole('generic', { name: 'type' }).click()
    I.findByRoleWithin('listbox', 'option', { name: I.translate('authenticators.PING') }).click()
    I.findByLabelText(new RegExp(`${I.translate('authenticators.name')}`))
      .should('exist')
      .click()
      .clear()
      .type(I.translate('authenticators.PING'))
    I.findByLabelText(new RegExp(`${I.translate('authenticators.discovery_url')}`))
      .should('exist')
      .click()
      .clear()
      .type('https://myurl.com')
    I.findByLabelText(new RegExp(`${I.translate('authenticators.client_id')}`))
      .should('exist')
      .click()
      .clear()
      .type('MYID')
    I.findByRole('generic', { name: 'configuration.client_authentication.id_token_signed_response_alg' }).click()
    I.findByRoleWithin('listbox', 'option', { name: I.translate('authenticators.ES512') }).click()
    I.findByRole('button', { name: I.translate('common.save') })
      .should('exist')
      .click()
    I.findByRole('alert').should('contain', I.translate('common.success.create')).dismissAlert()
  })

  it('Add Duo MFA', () => {
    I.findByRole('button', { name: I.translate('authenticators.add') })
      .should('exist')
      .click()
    I.findByRole('generic', { name: 'type' }).click()
    I.findByRoleWithin('listbox', 'option', { name: I.translate('authenticators.DUO_MFA') }).click()
    I.findByLabelText(new RegExp(`${I.translate('authenticators.name')}`))
      .should('exist')
      .click()
      .clear()
      .type(I.translate('authenticators.DUO_MFA'))
    I.findByLabelText(new RegExp(`${I.translate('authenticators.auth_api_hostname')}`))
      .should('exist')
      .click()
      .clear()
      .type('myurl.com')
    I.findByLabelText(new RegExp(`${I.translate('authenticators.auth_secret_key')}`))
      .should('exist')
      .click()
      .clear()
      .type('MY_SECRET_KEY')
    I.findByLabelText(new RegExp(`${I.translate('authenticators.auth_integration_key')}`))
      .should('exist')
      .click()
      .clear()
      .type('MY_INTEGRATION_KEY')
    I.findByRole('button', { name: I.translate('common.save') })
      .should('exist')
      .click()
    I.findByRole('alert').should('contain', I.translate('common.success.create')).dismissAlert()
  })

  it('Add Okta MFA', () => {
    I.findByRole('button', { name: I.translate('authenticators.add') })
      .should('exist')
      .click()
    I.findByRole('generic', { name: 'type' }).click()
    I.findByRoleWithin('listbox', 'option', { name: I.translate('authenticators.OKTA_MFA') }).click()
    I.findByLabelText(new RegExp(`${I.translate('authenticators.name')}`))
      .should('exist')
      .click()
      .clear()
      .type('OKTA MFA Test')
    I.findByLabelText(new RegExp(`${I.translate('authenticators.auth_api_key')}`))
      .should('exist')
      .click()
      .clear()
      .type('authKey002')
    I.findByLabelText(new RegExp(`${I.translate('authenticators.auth_domain')}`))
      .should('exist')
      .click()
      .clear()
      .type('test123.com')
    I.findByRole('button', { name: I.translate('common.save') })
      .should('exist')
      .click()
    I.findByRole('alert').should('contain', I.translate('common.success.create')).dismissAlert()
  })

  it('Add TOTP authenticator', () => {
    I.findByRole('button', { name: I.translate('authenticators.add') })
      .should('exist')
      .click()
    I.findByRole('generic', { name: 'type' }).click()
    I.findByRoleWithin('listbox', 'option', { name: I.translate('authenticators.TOTP') }).click()
    I.findByLabelText(new RegExp(`${I.translate('authenticators.name')}`))
      .should('exist')
      .click()
      .clear()
      .type('TOTP Test')
    I.findByLabelText(new RegExp(`${I.translate('authenticators.window')}`))
      .should('exist')
      .click()
      .clear()
      .type('2')
    I.findByRole('button', { name: I.translate('common.save') })
      .should('exist')
      .click()
    I.findByRole('alert').should('contain', I.translate('common.success.create')).dismissAlert()
  })

  it('Edit TOTP Authenticator', () => {
    I.findByText(mockTOTP.name).should('exist').click()
    I.findByLabelText(new RegExp(`${I.translate('authenticators.name')}`))
      .should('exist')
      .click()
      .clear()
      .type('TOTP Test Edited')
    I.findByLabelText(new RegExp(`${I.translate('authenticators.window')}`))
      .should('exist')
      .click()
      .clear()
      .type('1')
    I.findByRole('button', { name: I.translate('common.save') })
      .should('exist')
      .click()
    I.findByRole('alert').should('contain', I.translate('common.success.update')).dismissAlert()
  })

  it('Edit Authenticators', () => {
    I.findByText(mockEnterprise.name).should('exist').click()
    I.findByLabelText(new RegExp(`${I.translate('authenticators.name')}`))
      .should('exist')
      .click()
      .clear()
      .type(I.translate('authenticators.ENTERPRISE'))
    I.findByRole('button', { name: I.translate('common.save') })
      .should('exist')
      .click()
    I.findByRole('alert').should('contain', I.translate('common.success.update')).dismissAlert()
  })

  it('Delete Authenticators', () => {
    I.findAllByLabelText(I.translate('common.delete')).first().click({ force: true })
    I.findByRole('button', { name: I.translate('common.delete') })
      .should('exist')
      .click()
    I.findByRole('alert').should('contain', I.translate('common.success.delete')).dismissAlert()
  })
})
